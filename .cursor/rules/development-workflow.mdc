---
description:
globs:
alwaysApply: false
---
# Development Workflow

## Development Setup

- Development container for consistent environments
- Initial setup: `npm install`

## Commands

Main development commands:

```
npm run start        # Start development server
npm run build        # Build for production
npm run test         # Run package tests
npm run csv_to_json  # Convert CSV to JSON
npm run benchmark    # Run performance tests
```

## Code Quality Tools

- Elm Review - Static code analysis
  - Run: `npm run -w review start`
- Biome - JS/TS linter and formatter
  - Run: `npx @biomejs/biome check .`
  - Fix: `npx @biomejs/biome check --apply .`
- elm-format - Elm code formatter
  - Run: `npx elm-format src/ --yes`

## Testing Strategy

- Unit tests in `package/tests`
- Benchmarks in `cli/benchmark`
- Elm's Time-travel debugger for debugging

## Git Workflow

- `main`: Stable branch, no direct commits
- `develop`: Main development branch
- Feature branches: `feature/<name>`
- Bug fix branches: `bugfix/<issue>`
- Release branches: `release/v<version>`

## Deployment

- Build output: `app/dist` directory
- Static files from `app/static`
- CI/CD through GitHub Actions
- Tests and linter checks must pass before deployment
